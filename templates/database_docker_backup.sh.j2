#!/bin/bash

# be sure, you have `zstd` installed
# original source: https://gist.github.com/tldev-de/28a3ca2f2ba7026ecdbb83ceb75d112d

{% if docker_database_backup_ping | length %}
# ping monitoring
curl -fsS -m 10 --retry 5 -o  /dev/null {{ docker_database_backup_ping }}/start
declare -i SUM_OF_EXIT_CODES=0
declare -i SUM_OF_BACKUPS=0
{% endif %}

#####################################
############## config ###############
#####################################

MYSQL_INCLUDE_REGEX="{{ docker_database_backup_mysql_include}}"
MARIA_INCLUDE_REGEX="{{ docker_database_backup_maria_include}}"
POSTGRES_INCLUDE_REGEX="{{ docker_database_backup_postgres_include }}"
MONGO_INCLUDE_REGEX="{{ docker_database_backup_mongo_include }}"

MYSQL_EXCLUDE_REGEX="{{ docker_database_backup_mysql_exclude }}"
MARIA_EXCLUDE_REGEX="{{ docker_database_backup_maria_exclude}}"
POSTGRES_EXCLUDE_REGEX="{{ docker_database_backup_postgres_exclude }}"
MONGO_EXCLUDE_REGEX="{{ docker_database_backup_mongo_exclude }}"

KEEP_DAYS="{{ docker_database_backup_keep_days }}"


# get current directory
CURRENT_DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )


#####################################
########## mariadb / mysql ##########
#####################################

# get containers running mysql or older mariadb images
CONTAINERS=$(docker ps --format "{{ '{{.Image}}' }}\t{{ '{{.Names}}' }}" | \
  grep -Ei "${MYSQL_INCLUDE_REGEX}" | grep -Eiv "${MYSQL_EXCLUDE_REGEX}" | awk '{print $2}')

for i in ${CONTAINERS}
do
  printf 'new container: %s\n' "$i"
  BACKUP_FOLDER=${CURRENT_DIR}/backups/$i
  mkdir -p "${BACKUP_FOLDER}"
  docker exec "$i" sh -c 'mysqldump --all-databases --single-transaction {{ docker_database_backup_mysql_custom_options
    }} -uroot -p"${MYSQL_ROOT_PASSWORD}${MARIADB_ROOT_PASSWORD}"'\
    | zstd > "${BACKUP_FOLDER}/$(date +%Y%m%d-%H%M).sql.zst"
{% if docker_database_backup_ping | length %}
  SUM_OF_EXIT_CODES+=${PIPESTATUS[0]}
  SUM_OF_BACKUPS+=1
{% endif %}
done

#####################################
########## mariadb ##################
#####################################

# get containers running mariadb images
CONTAINERS=$(docker ps --format "{{ '{{.Image}}' }}\t{{ '{{.Names}}' }}" | \
  grep -Ei "${MARIA_INCLUDE_REGEX}" | grep -Eiv "${MARIA_EXCLUDE_REGEX}" | awk '{print $2}')

for i in ${CONTAINERS}
do
  printf 'new container: %s\n' "$i"
  BACKUP_FOLDER=${CURRENT_DIR}/backups/$i
  mkdir -p "${BACKUP_FOLDER}"
  docker exec "$i" sh -c 'mariadb-dump --all-databases --single-transaction {{ docker_database_backup_maria_custom_options
    }} -uroot -p"${MARIADB_ROOT_PASSWORD}"'\
    | zstd > "${BACKUP_FOLDER}/$(date +%Y%m%d-%H%M).sql.zst"
{% if docker_database_backup_ping | length %}
  SUM_OF_EXIT_CODES+=${PIPESTATUS[0]}
  SUM_OF_BACKUPS+=1
{% endif %}
done

#####################################
############## postgres #############
#####################################

# get containers running postgres images
CONTAINERS=$(docker ps --format "{{ '{{.Image}}' }}\t{{ '{{.Names}}' }}" | \
  grep -Ei "${POSTGRES_INCLUDE_REGEX}" | grep -Eiv "${POSTGRES_EXCLUDE_REGEX}" | awk '{print $2}')

for i in ${CONTAINERS}
do
  printf 'new container: %s\n' "$i"
  BACKUP_FOLDER=${CURRENT_DIR}/backups/$i
  mkdir -p "${BACKUP_FOLDER}"
  docker exec "$i" sh -c 'pg_dumpall {{ docker_database_backup_postgres_custom_options
    }} -U "$POSTGRES_USER"' | zstd > "$BACKUP_FOLDER/$(date +%Y%m%d-%H%M).sql.zst"
{% if docker_database_backup_ping | length %}
  SUM_OF_EXIT_CODES+=${PIPESTATUS[0]}
  SUM_OF_BACKUPS+=1
{% endif %}
done


#####################################
############### mongo ###############
#####################################

# get containers running mongo images
CONTAINERS=$(docker ps --format "{{ '{{.Image}}' }}\t{{ '{{.Names}}' }}" | \
  grep -Ei "${MONGO_INCLUDE_REGEX}" | grep -Eiv "${MONGO_EXCLUDE_REGEX}" | awk '{print $2}')

for i in ${CONTAINERS}
do
  printf 'new container: %s\n' "$i"
  BACKUP_FOLDER=${CURRENT_DIR}/backups/$i
  mkdir -p "${BACKUP_FOLDER}"
  docker exec "$i" sh -c 'mongodump -u "$MONGO_INITDB_ROOT_USERNAME" -p "$MONGO_INITDB_ROOT_PASSWORD" --archive --quiet {{
    docker_database_backup_mongo_custom_options }}' | \
    zstd > "${BACKUP_FOLDER}/$(date +%Y%m%d-%H%M).archive.zst"
{% if docker_database_backup_ping | length %}
  SUM_OF_EXIT_CODES+=${PIPESTATUS[0]}
  SUM_OF_BACKUPS+=1
{% endif %}
done

# delete backups older than 14 days
/usr/bin/find "${CURRENT_DIR}/backups/" -mtime +${KEEP_DAYS} -type f -delete

{% if docker_database_backup_ping | length %}
# ping monitoring
ping_body="${SUM_OF_BACKUPS} backups started:"$'\n'$(tail --bytes=1000 "${CURRENT_DIR}/last_run.txt")
curl -fsS -m 10 --retry 5 -o /dev/null --data-raw "${ping_body}" \
  "{{ docker_database_backup_ping }}/${SUM_OF_EXIT_CODES}"
{% endif %}
