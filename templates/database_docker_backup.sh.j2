#!/bin/bash

# be sure, you have `zstd` installed
# original source: https://gist.github.com/tldev-de/28a3ca2f2ba7026ecdbb83ceb75d112d

{% if docker_database_backup_ping | length %}
# ping monitoring
curl -fsS -m 10 --retry 5 -o  /dev/null {{ docker_database_backup_ping }}/start
{% endif %}

#####################################
############## config ###############
#####################################

MYSQL_REGEX="{{ docker_database_backup_mysql_regex }}"
MARIADB_REGEX="{{ docker_database_backup_mariadb_regex }}"
POSTGRES_REGEX="{{ docker_database_backup_postgres_regex }}"
MONGO_REGEX="{{ docker_database_backup_mongo_regex }}"
KEEP_DAYS="{{ docker_database_backup_keep_regex }}"


# get current directory
CURRENT_DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

#####################################
########## mariadb ##################
#####################################

# get containers running mariadb images
CONTAINERS=$(docker ps --format "{{ '{{.Image}}' }}\t{{ '{{.Names}}' }}" | grep -P $MYSQL_REGEX | awk '{print $2}')

for i in $CONTAINERS
do
  printf "new container: $i\n"
  BACKUP_FOLDER=$CURRENT_DIR/backups/$i
  mkdir -p $BACKUP_FOLDER
  docker exec $i sh -c 'mysqldump --all-databases --single-transaction -uroot -p"$MARIADB_ROOT_PASSWORD"' | zstd > $BACKUP_FOLDER/$(date +%Y%m%d-%H%M).sql.zst
done

#####################################
########## mysql ####################
#####################################

# get containers running mysql images
CONTAINERS=$(docker ps --format "{{ '{{.Image}}' }}\t{{ '{{.Names}}' }}" | grep -P $MYSQL_REGEX | awk '{print $2}')

for i in $CONTAINERS
do
  printf "new container: $i\n"
  BACKUP_FOLDER=$CURRENT_DIR/backups/$i
  mkdir -p $BACKUP_FOLDER
  docker exec $i sh -c 'mysqldump --all-databases --single-transaction -uroot -p"$MYSQL_ROOT_PASSWORD"' | zstd > $BACKUP_FOLDER/$(date +%Y%m%d-%H%M).sql.zst
done


#####################################
############## postgres #############
#####################################

# get containers running postgres images
CONTAINERS=$(docker ps --format "{{ '{{.Image}}' }}\t{{ '{{.Names}}' }}" | grep -P $POSTGRES_REGEX | awk '{print $2}')

for i in $CONTAINERS
do
  printf "new container: $i\n"
  BACKUP_FOLDER=$CURRENT_DIR/backups/$i
  mkdir -p $BACKUP_FOLDER
  docker exec $i sh -c 'pg_dumpall -U "$POSTGRES_USER"' | zstd > $BACKUP_FOLDER/$(date +%Y%m%d-%H%M).sql.zst
done


#####################################
############### mongo ###############
#####################################

# get containers running mongo images
CONTAINERS=$(docker ps --format "{{ '{{.Image}}' }}\t{{ '{{.Names}}' }}" | grep -P $MONGO_REGEX | awk '{print $2}')

for i in $CONTAINERS
do
  printf "new container: $i\n"
  BACKUP_FOLDER=$CURRENT_DIR/backups/$i
  mkdir -p $BACKUP_FOLDER
  docker exec $i sh -c 'mongodump -u "$MONGO_INITDB_ROOT_USERNAME" -p "$MONGO_INITDB_ROOT_PASSWORD" --archive' | zstd > $BACKUP_FOLDER/$(date +%Y%m%d-%H%M).archive.zst
done

# delete backups older than 14 days
/usr/bin/find $CURRENT_DIR/backups/ -mtime +$KEEP_DAYS -delete -type f

{% if docker_database_backup_ping | length %}
# ping monitoring
ping_body=$(tail -n 1 {{ docker_database_backup_path }}/last_run.txt)
curl -fsS -m 10 --retry 5 -o /dev/null --data-raw "$ping_body" {{ docker_database_backup_ping }}
{% endif %}
